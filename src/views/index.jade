mixin spinner
  .spinner
    .spinner-dot
    .spinner-dot
    .spinner-dot

doctype html
html
  head
    title cropit | a "customizable crop and zoom" jQuery plugin

    meta(name='description' content='A "customizable crop and zoom" jQuery plugin.')
    meta(charset='utf-8')

    link(rel='stylesheet' href='//brick.a.ssl.fastly.net/Lato:300,300i,400,400i,700')

    link(rel='stylesheet' href='http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.1/styles/tomorrow.min.css')

    link(rel='stylesheet' href='styles/index.css')

  body

    .splash

      .title-wrapper
        h1.title cropit
        .tagline a "customizable crop and zoom" jQuery plugin
        .github-link
          a(href='https://github.com/scottcheng/cropit')
            span.icon.icon-github2
            | GitHub

      .demo-wrapper
        .preview-wrapper
          .cropit-image-preview-container
            .cropit-image-preview
              +spinner
          .slider-wrapper
            span.icon.icon-image.small-image
            input.cropit-image-zoom-input.custom(type='range')
            span.icon.icon-image.large-image

      .btns-wrapper
        .btns
          input.cropit-image-input.custom(type='file')
          .btn.select-image-btn
            span.icon.icon-image
            | Select new image
          .btn.download-btn
            span.icon.icon-box-add
            | Download cropped image

    section.what-it-is
      .container
        h2.title What it is

        .content
          ul
            li
              | A jQuery plugin for image cropping and zooming.
            li
              | Loads images locally via 
              a(href='https://developer.mozilla.org/en-US/docs/Web/API/FileReader' target='_blank') FileReader
              | , and does cropping using 
              a(href='https://developer.mozilla.org/en-US/docs/Web/HTML/Canvas' target='_blank') canvas
              | .
            li
              | Designed to be extremely customizable via CSS.
            li
              | Best for the cases where you want users to upload images of a specific size and ratio.

    section.getting-started
      .container
        h2.title Getting started

        .content
          p
            | Install using 
            a(href='http://bower.io/' target='_blank') Bower
            | :
          pre: code bower install cropit

    section.demos

      .title-wrapper
        .container
          h2.title Demos

      .sub-section.demo-wrapper.basic
        .container
          h3.title Basic image cropper
          .demo
            .column
              .cropit-image-preview
                +spinner
              .slider-wrapper
                span.icon.icon-image.small-image
                input.cropit-image-zoom-input(type='range')
                span.icon.icon-image.large-image
            .column
              .btns
                input.cropit-image-input(type='file')
                .btn.download-btn
                  span.icon.icon-box-add
                  | Download cropped image
          .code
            .html
              :htmlsrc
                <!-- This wraps the whole cropper -->
                <div id="image-cropper">
                  <!-- This is where the preview image is displayed -->
                  <div class="cropit-image-preview"></div>

                  <!-- This range input controls zoom -->
                  <!-- You can add additional elements here, e.g. the image icons -->
                  <input type="range" class="cropit-image-zoom-input" />

                  <!-- This is where user selects new image -->
                  <input type="file" class="cropit-image-input" />

                  <!-- The cropit- classes above are needed
                       so cropit can identify these elements -->
                </div>

            .javascript
              :jssrc
                $('.image-cropper').cropit();

                // In the demos I'm passing in an imageState option
                // so it renders an image by default:
                // $('.image-cropper').cropit({ imageState: { src: { imageSrc } } });

            .css
              :csssrc
                .cropit-image-preview {
                  /* You can specify preview size in CSS */
                  width: 960px;
                  height: 540px;
                }

      .sub-section.demo-wrapper.custom-button
        .container
          h3.title Custom select image button and zoom slider
          .demo
            .column
              .cropit-image-preview
                +spinner
              .slider-wrapper
                span.icon.icon-image.small-image
                input.cropit-image-zoom-input.custom(type='range')
                span.icon.icon-image.large-image
            .column
              .btns
                input.cropit-image-input.custom(type='file')
                .btn.select-image-btn
                  span.icon.icon-image
                  | Select new image
                .btn.download-btn
                  span.icon.icon-box-add
                  | Download cropped image
          .code
            .html
              :htmlsrc
                <div id="image-cropper">
                  <div class="cropit-image-preview"></div>

                  <input type="range" class="cropit-image-zoom-input" />

                  <!-- The actual file input will be hidden -->
                  <input type="file" class="cropit-image-input" />
                  <!-- And clicking on this button will open up select file dialog -->
                  <div class="select-image-btn">Select new image</div>
                </div>
            .javascript
              :jssrc
                $('.image-cropper').cropit();

                // When user clicks select image button,
                // open select file dialog programmatically
                $('.select-image-btn').click(function() {
                  $('.cropit-image-input').click();
                });
            .css
              :csssrc
                /* Hide file input */
                input.cropit-image-input {
                  visibility: hidden;
                }

                /*
                 * See http://www.htmllion.com/html5-range-input-with-css.html
                 * for styling range input
                 */

      .sub-section.demo-wrapper.image-background
        .container
          h3.title Image cropper with background
          .demo
            .column
              .cropit-image-preview-container
                .cropit-image-preview
                  +spinner
              .slider-wrapper
                span.icon.icon-image.small-image
                input.cropit-image-zoom-input.custom(type='range')
                span.icon.icon-image.large-image
            .column
              .btns
                input.cropit-image-input.custom(type='file')
                .btn.select-image-btn
                  span.icon.icon-image
                  | Select new image
                .btn.download-btn
                  span.icon.icon-box-add
                  | Download cropped image
          .code
            .html
              :htmlsrc
                <div id="image-cropper">
                  <!-- The preview container is needed for background image to work -->
                  <div class="cropit-image-preview-container">
                    <div class="cropit-image-preview"></div>
                  </div>

                  <input type="range" class="cropit-image-zoom-input" />

                  <input type="file" class="cropit-image-input" />
                  <div class="select-image-btn">Select new image</div>
                </div>
            .javascript
              :jssrc
                $('.image-cropper').cropit({ imageBackground: true });
            .css
              :csssrc
                .cropit-image-background {
                  opacity: .2;
                }

                /*
                 * If the slider or anything else is covered by the background image,
                 * use relative or absolute position on it
                 */
                input.cropit-image-zoom-input {
                  position: relative;
                }

                /* Limit the background image by adding overflow: hidden */
                .image-cropper {
                  overflow: hidden;
                }

      .sub-section.demo-wrapper.image-background-border
        .container
          h3.title Image cropper with thin background border
          .demo
            .column
              .cropit-image-preview-container
                .cropit-image-preview
                  +spinner
              .slider-wrapper
                span.icon.icon-image.small-image
                input.cropit-image-zoom-input.custom(type='range')
                span.icon.icon-image.large-image
            .column
              .btns
                input.cropit-image-input.custom(type='file')
                .btn.select-image-btn
                  span.icon.icon-image
                  | Select new image
                .btn.download-btn
                  span.icon.icon-box-add
                  | Download cropped image
          .code
            .html
              :htmlsrc
                <div id="image-cropper">
                  <div class="cropit-image-preview-container">
                    <div class="cropit-image-preview"></div>
                  </div>

                  <input type="range" class="cropit-image-zoom-input" />

                  <input type="file" class="cropit-image-input" />
                  <div class="select-image-btn">Select new image</div>
                </div>
            .javascript
              :jssrc
                $('.image-cropper').cropit({
                  imageBackground: true,
                  imageBackgroundBorderSize: 20 // Width of background border
                });

    section.docs

      .title-wrapper
        .container
          h2.title Documentation

      .sub-section.doc-wrapper.options
        .container
          h3.title Initialization options

          :jssrc
            $imageCropper.cropit(options);

          //- Elements
          .option
            .name $preview
            .type jQuery element
            .description The HTML element that displays image preview.
            .default: code $imageCropper.find('.cropit-image-preview')
          .option
            .name $fileInput
            .type jQuery element
            .description File input element.
            .default: code $imageCropper.find('input.cropit-image-input')
          .option
            .name $imageZoomInput
            .type jQuery element
            .description Range input element that controls image zoom.
            .default: code $imageCropper.find('input.cropit-image-zoom-input')
          .option
            .name $previewContainer
            .type jQuery element
            .description
              | Preview container. Only needed when 
              code imageBackground
              |  is true.
            .default: code $imageCropper.find('.cropit-image-preview-container')

          //- Values
          .option
            .name width
            .type number
            .description Width of image preview in pixels. If set, it will override the CSS property.
            .default: code null
          .option
            .name height
            .type number
            .description Height of image preview in pixels. If set, it will override the CSS property.
            .default: code null
          .option
            .name imageBackground
            .type boolean
            .description Whether or not to display the background image beyond the preview area.
            .default: code false
          .option
            .name imageBackgroundBorderWidth
            .type number
            .description
              | Width of background image border in pixels. 
              | If greater than 
              code 0
              | , the background image beyond the width will be hidden.
            .default: code 0
          .option
            .name exportZoom
            .type number
            .description
              | The ratio between the desired image size to export and the preview size. 
              | For example, if the preview size is 
              code 300px * 200px
              | , and 
              code exportZoom = 2
              | , then the exported image size will be 
              code 600px * 400px
              | . This also affects the maximum zoom level, since the exported image cannot be zoomed to larger than its original size.
            .default: code 1

          //- Callbacks
          .option
            .name onFileChange
            .type function
            .description
              | Called when user selects a file in the select file input.
          .option
            .name onImageLoading
            .type function
            .description
              | Called when image starts to be loaded.
          .option
            .name onImageLoaded
            .type function
            .description
              | Called when image is loaded.
          .option
            .name onZoomEnabled
            .type function
            .description
              | Called when image the zoom slider is enabled.
          .option
            .name onZoomDisabled
            .type function
            .description
              | Called when image the zoom slider is disabled.

      .sub-section.doc-wrapper.methods
        .container
          h3.title APIs

          :jssrc
            // Returns the cropped image in Data URI format.
            $imageCropper.cropit('croppedImageData');

            // Returns whether the current image is big enough to be zoomable.
            // Note that an image cannot be zoomed to larger than its original size.
            $imageCropper.cropit('isZoomable');

            // Returns the source of current image.
            // If the image is loaded through the file input, the image source will be
            // in Data URI format.
            $imageCropper.cropit('imageSrc');

            // Returns the image offset of the current cropping
            // E.g. { x: -10, y: -15 }
            $imageCropper.cropit('offset');

            // Returns the current zoom.
            $imageCropper.cropit('zoom');

            // Returns the current image size.
            // E.g. { width: 1920, height: 1080 }
            $imageCropper.cropit('imageSize');

            // Returns the current preview area size.
            // E.g. { width: 600, height: 400 }
            $imageCropper.cropit('previewSize');

            // Sets preview area size.
            $imageCropper.cropit('previewSize', { width: 800, height: 450 });

    footer
      a(href='https://github.com/scottcheng/cropit')
        span.icon.icon-github2
        | GitHub
      | |
      a(href='http://scottcheng.com/' target='_blank') Scott Cheng

    script(src='scripts/vendor.js')
    script(src='scripts/index.js')
    script(src='http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.1/highlight.min.js')
    script hljs.initHighlightingOnLoad();
